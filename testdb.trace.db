2021-11-23 15:54:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:77)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:53)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy98.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 15:54:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:703)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:246)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:99)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:547)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy98.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 16:07:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
2021-11-23 16:07:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (id integer generated by default as identity, authority varchar(255), primary key (id)) [42101-200]
2021-11-23 16:07:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:77)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:53)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 16:07:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:703)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:246)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:99)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:547)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 16:25:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
2021-11-23 16:25:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (id integer generated by default as identity, authority varchar(255), primary key (id)) [42101-200]
2021-11-23 16:25:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:77)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:53)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 16:25:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:703)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:246)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:99)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:547)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 16:44:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)
2021-11-23 16:44:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (id integer generated by default as identity, authority varchar(255), primary key (id)) [42101-200]
2021-11-23 16:44:05 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1286)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1178)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2021-11-23 16:44:05 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1286)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1178)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2021-11-23 16:44:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-23 16:45:37 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1286)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1178)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2021-11-23 16:45:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy98.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-24 10:09:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "DATABASECHANGELOGLOCK" не найдена
Table "DATABASECHANGELOGLOCK" not found; SQL statement:
SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42102-200]
2021-11-24 10:09:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:09:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:16:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:18:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:20:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:24:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:24:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null
); [42101-200]
2021-11-24 10:28:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:28:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:38:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:39:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 10:52:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:30:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:33:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:36:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
    id serial primary key,
    authority varchar (50) not null unique
); [42101-200]
2021-11-24 11:45:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:77)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:53)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-24 11:45:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:703)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:246)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:99)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:547)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy103.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-24 11:45:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2021-11-24 11:45:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (id integer generated by default as identity, authority varchar(255), primary key (id)) [42101-200]
2021-11-24 11:45:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:125)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:123)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:244)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$5(ClassBasedTestDescriptor.java:337)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:342)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$6(ClassBasedTestDescriptor.java:337)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:336)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:259)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:252)
	at java.base/java.util.Optional.orElseGet(Optional.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:251)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2021-11-24 11:45:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (id integer generated by default as identity, authority varchar(255), primary key (id)) [42101-200]
2021-11-24 11:45:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.jdbcStatement(GenerationTargetToDatabase.java:77)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:53)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy98.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-24 11:45:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:703)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:246)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.releaseConnection(JdbcEnvironmentInitiator.java:185)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.release(DdlTransactionIsolatorNonJtaImpl.java:83)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.release(GenerationTargetToDatabase.java:99)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:547)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy98.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-24 11:45:28 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1286)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1178)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2021-11-24 11:45:28 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:727)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:713)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 33 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/kustoff/projects/job4j_forum/testdb.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:166)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 27 more
Caused by: java.nio.channels.OverlappingFileLockException
	at java.base/sun.nio.ch.FileLockTable.checkList(FileLockTable.java:229)
	at java.base/sun.nio.ch.FileLockTable.add(FileLockTable.java:123)
	at java.base/sun.nio.ch.FileChannelImpl.tryLock(FileChannelImpl.java:1286)
	at org.h2.store.fs.FileNio.tryLock(FilePathNio.java:121)
	at java.base/java.nio.channels.FileChannel.tryLock(FileChannel.java:1178)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	... 28 more
2021-11-24 11:45:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Невозможно удалить "AUTHORITIES", пока существует зависимый объект "FKRIXIKJHJFEL192YJ7W7XAPDS7"
Cannot drop "AUTHORITIES" because "FKRIXIKJHJFEL192YJ7W7XAPDS7" depends on it; SQL statement:
drop table authorities if exists [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:228)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl.perform(SchemaDropperImpl.java:536)
	at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:833)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:497)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:680)
	at com.sun.proxy.$Proxy98.close(Unknown Source)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:600)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
2021-11-24 13:36:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:36:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:52:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 13:57:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:27:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:43 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:29:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:31:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:50:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
2021-11-24 14:52:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Таблица "AUTHORITIES" уже существует
Table "AUTHORITIES" already exists; SQL statement:
create table authorities (
                             id serial primary key,
                             authority varchar (50) not null unique
); [42101-200]
